USE master;  
GO  
IF DB_ID (N'PromotionApplication') IS NOT NULL
	DROP DATABASE PromotionApplication;  
GO 
CREATE DATABASE PromotionApplication;
GO
USE PromotionApplication;
GO

IF OBJECT_ID(N'dbo.PA_ITEM', N'U') IS NOT NULL 
	DROP TABLE dbo.PA_ITEM;
GO

CREATE TABLE dbo.PA_ITEM(
	ITEM_ID int NOT NULL PRIMARY KEY,
	ITEM_NAME varchar(100) NOT NULL UNIQUE, 
	ITEM_DESCRIPTON varchar(1000) NOT NULL, 
	BRAND_ID int NOT NULL,
	BRAND_NAME varchar(100) NOT NULL,
	CATEGORY_ID int NOT NULL,
	CATEGORY_NAME varchar(100) NOT NULL,
	PRICE_DATE date,
	PRICE_VALUE float
);


USE master;
GO

IF DB_ID (N'ItemCatalogue') IS NOT NULL
	DROP DATABASE ItemCatalogue;  
GO 
CREATE DATABASE ItemCatalogue;
GO
USE ItemCatalogue;
GO

IF OBJECT_ID(N'dbo.IC_CATEGORY', N'U') IS NOT NULL 
	DROP TABLE dbo.IC_CATEGORY;
GO

CREATE TABLE dbo.IC_CATEGORY(
	CATEGORY_ID int NOT NULL PRIMARY KEY,
	CATEGORY_NAME varchar(100) NOT NULL UNIQUE, 
	CATEGORY_DESC varchar(1000)
);


IF OBJECT_ID(N'dbo.IC_BRAND', N'U') IS NOT NULL 
	DROP TABLE dbo.IC_BRAND;
GO

CREATE TABLE dbo.IC_BRAND(
	BRAND_ID int NOT NULL PRIMARY KEY,
	BRAND_NAME varchar(100) NOT NULL UNIQUE, 
	BRAND_DESC varchar(1000) 
);


IF OBJECT_ID(N'dbo.IC_ITEM', N'U') IS NOT NULL 
	DROP TABLE dbo.IC_ITEM;
GO

CREATE TABLE dbo.IC_ITEM(
	ITEM_ID int NOT NULL PRIMARY KEY,
	ITEM_NAME varchar(100) NOT NULL UNIQUE, 
	ITEM_DESCRIPTON varchar(1000) NOT NULL, 
	BRAND_ID int NOT NULL,
	CATEGORY_ID int NOT NULL
);


USE master;
GO

IF DB_ID (N'PricingApplication') IS NOT NULL
	DROP DATABASE PricingApplication;  
GO 
CREATE DATABASE PricingApplication;
GO
USE PricingApplication;
GO

IF OBJECT_ID(N'dbo.PR_PRICE', N'U') IS NOT NULL
	DROP TABLE dbo.[PR_PRICE];
GO

CREATE TABLE dbo.[PR_PRICE](
	ITEM_ID int NOT NULL,
	PRICE_DATE varchar(100) NOT NULL, 
	PRICE_VALUE varchar(1000) NOT NULL, 
	
	PRIMARY KEY (ITEM_ID, PRICE_DATE)
);

USE MASTER
GO
USE ItemCatalogue
GO

DECLARE @count INT 
SET @count = 0

WHILE @count < 5
BEGIN
INSERT INTO dbo.IC_CATEGORY
    SELECT    @count, 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97),
			CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97)
    SET @count += 1
END

--SELECT * FROM IC_CATEGORY

SET @count = 0

WHILE @count < 10
BEGIN
INSERT INTO dbo.IC_BRAND
    SELECT    @count, 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97),
			CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97)
    SET @count += 1
END

--SELECT * FROM IC_BRAND


SET @count = 0

WHILE @count < 10000
BEGIN
INSERT INTO dbo.IC_ITEM
    SELECT    @count, 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + 
            CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97) + CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97),
			CHAR((ABS(CHECKSUM(NEWID())) % 26) + 97),
			ABS(CHECKSUM(NEWID())) % 10,
			ABS(CHECKSUM(NEWID())) % 5
	SET @count += 1
END

--SELECT * FROM IC_ITEM

USE MASTER
GO
USE PricingApplication
GO

DECLARE @count INT 
DECLARE @x INT
DECLARE @randomDate date
SET @x = 0
SET @count = 1
SET @randomDate =  CAST(DATEADD(DAY, (ABS(CHECKSUM(NEWID())) % 100) * -1, GETDATE()) AS DATE)

WHILE @count < 100001
BEGIN
INSERT INTO dbo.PR_PRICE
    SELECT  @x, 
			CAST(DATEADD(day, @count % 10, @randomDate) AS date),
			(ABS(CHECKSUM(NEWID())) % 90007)

IF @count % 10 = 0
	SET @x += 1

SET @count += 1
END

--SELECT * FROM PR_PRICE


USE master
GO



------


select ROW_NUMBER() OVER(PARTITION BY ITEM_ID ORDER BY PRICE_DATE) AS Row#, [ITEM_ID],[PRICE_DATE], [PRICE_VALUE]  FROM 
[PricingApplication].[dbo].[PR_PRICE];

with uniqueIds as (select ROW_NUMBER() OVER(PARTITION BY ITEM_ID ORDER BY PRICE_DATE) AS Row#, [ITEM_ID],[PRICE_DATE], [PRICE_VALUE]  FROM 
[PricingApplication].[dbo].[PR_PRICE])
insert into [PromotionApplication].[dbo].[PA_ITEM]
select [ItemCatalogue].[dbo].[IC_ITEM].[ITEM_ID]
      ,[ItemCatalogue].dbo.IC_ITEM.ITEM_NAME
      ,[ItemCatalogue].dbo.IC_ITEM.[ITEM_DESCRIPTON]
      ,[ItemCatalogue].dbo.IC_BRAND.[BRAND_ID]
      ,[ItemCatalogue].dbo.IC_BRAND.[BRAND_NAME]
      ,[ItemCatalogue].dbo.IC_CATEGORY.[CATEGORY_ID]
      ,[ItemCatalogue].dbo.IC_CATEGORY.[CATEGORY_NAME]
      ,uniqueIds.[PRICE_DATE]
      ,uniqueIds.[PRICE_VALUE]
  FROM [ItemCatalogue].[dbo].[IC_ITEM] inner join uniqueIds on [ItemCatalogue].[dbo].[IC_ITEM].[ITEM_ID]=uniqueIds.[ITEM_ID]
  inner join [ItemCatalogue].dbo.IC_BRAND on IC_ITEM.brand_id = IC_BRAND.brand_id  
  inner join [ItemCatalogue].dbo.IC_CATEGORY on IC_ITEM.category_id = IC_category.category_id 
  where Row# = 1;

  SELECT * from [PromotionApplication].[dbo].[PA_ITEM];